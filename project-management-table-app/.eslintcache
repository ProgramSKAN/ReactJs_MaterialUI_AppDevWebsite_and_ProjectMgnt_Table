[{"C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\index.js":"1","C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\App.js":"2","C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\LandingPage.js":"3","C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\ui\\Theme.js":"4","C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\ui\\EnhancedTable.js":"5"},{"size":166,"mtime":1608387717898,"results":"6","hashOfConfig":"7"},{"size":315,"mtime":1608443312515,"results":"8","hashOfConfig":"7"},{"size":20576,"mtime":1608704801749,"results":"9","hashOfConfig":"7"},{"size":3236,"mtime":1608444272165,"results":"10","hashOfConfig":"7"},{"size":17884,"mtime":1608529126258,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1f9i7xe",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\index.js",[],["25","26"],"C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\App.js",["27"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LandingPage from './LandingPage'\nimport theme from './ui/Theme'\nimport {ThemeProvider} from \"@material-ui/styles\";\n\n\nexport default function App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n        <LandingPage/>\n    </ThemeProvider>\n  );\n}\n\n","C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\LandingPage.js",["28","29","30","31","32","33","34","35","36"],"C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\ui\\Theme.js",[],"C:\\Users\\kasandeep\\Downloads\\GIT\\project-management-table-app\\src\\components\\ui\\EnhancedTable.js",["37","38","39","40","41","42"],"import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'date', label: 'Date' },\r\n  { id: 'service', label: 'Service' },\r\n  { id: 'features',label: 'Features' },\r\n  { id: 'complexity', label: 'Complexity' },\r\n  { id: 'platforms', label: 'Platforms' },\r\n  { id: 'users', label: 'Users' },\r\n  { id: 'total', label: 'Total' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='center'\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n  menu:{\r\n    '&:hover':{\r\n      backgroundColor:'#fff'\r\n    },\r\n    '&.Mui-focusVisible':{\r\n      backgroundColor:'#fff'\r\n    }\r\n  },\r\n  totalFilter:{\r\n    fontSize:'2rem',\r\n    color:theme.palette.common.orange\r\n  },\r\n  dollarSign:{\r\n    fontSize:'1.5rem',\r\n    color:theme.palette.common.orange\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n  const [alert,setAlert]=useState({open:false,color:'#FF3232',message:'Row Deleted!'});\r\n  const [undo,setUndo]=useState([]);\r\n\r\n  const [anchorEl,setAnchorEl]=useState(null);\r\n  const [openMenu,setOpenMenu]=useState(false);\r\n  const handleClick=(e)=>{\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  } \r\n  const handleClose=(e)=>{\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  }\r\n\r\n\r\n  const onDelete=()=>{\r\n    const newRows=[...props.rows];//shallow copy\r\n    const selectedRows=newRows.filter(row=>props.selected.includes(row.name));\r\n    selectedRows.map(row=>row.search=false);\r\n    props.setRows(newRows);\r\n\r\n    props.setSelected([]);\r\n    setUndo(selectedRows);\r\n    setAlert({...alert,open:true});\r\n  }\r\n\r\n  const onUndo=()=>{\r\n    setAlert({...alert,open:false});\r\n    const newRows=[...props.rows];\r\n    const redo=[...undo];\r\n    redo.map(row=>row.search=true);\r\n    Array.prototype.push.apply(newRows,...redo);\r\n    props.setRows(newRows);\r\n  }\r\n\r\n  const handleTotalFilter=(event)=>{\r\n    props.setFilterPrice(event.target.value);\r\n    if(event.target.value!==''){\r\n      const newRows=[...props.rows];\r\n      newRows.map(row=>eval(`${event.target.value} ${props.totalFilter==='='?'===':props.totalFilter} ${row.total.slice(1,row.total.length)}`)\r\n                              ?row.search=true:row.search=false);\r\n      props.setRows(newRows);\r\n    }else{\r\n      const newRows=[...props.rows];\r\n      newRows.map(row=>row.search=true);\r\n      props.setRows(newRows);\r\n    }\r\n  }\r\n\r\n  const filterChange=(operator)=>{\r\n    if(props.filterPrice!==''){\r\n      const newRows=[...props.rows];\r\n      newRows.map(row=>eval(`${props.filterPrice} ${operator==='='?'===':operator} ${row.total.slice(1,row.total.length)}`)\r\n                              ?row.search=true:row.search=false);\r\n      props.setRows(newRows);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">{null}</Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={onDelete}>\r\n            <DeleteIcon color='primary' style={{fontSize:30}} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick={handleClick}>\r\n            <FilterListIcon color='secondary' style={{fontSize:50}}/>\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n\r\n      <Snackbar open={alert.open}\r\n        ContentProps={{style:{backgroundColor:alert.color}}}\r\n        anchorOrigin={{vertical:'top',horizontal:'center'}}\r\n        message={alert.message}\r\n        // autoHideDuration={4000}\r\n        onClose={(event,reason)=>{\r\n          if(reason==='clickaway'){\r\n            setAlert({...alert,open:false});\r\n            const newRows=[...props.rows];\r\n            const names=[...undo.map(row=>row.name)];\r\n            props.setRows(newRows.filter(row=>!names.includes(row.name)));\r\n          }\r\n        }}\r\n        action={<Button style={{color:'#fff'}} onClick={onUndo}>Undo</Button>}\r\n      />\r\n\r\n      <Menu id=\"simple-menu\" \r\n            anchorEl={anchorEl} \r\n            open={openMenu} \r\n            onClose={handleClose}\r\n            classes={{paper:classes.menu}}\r\n            elevation={0}\r\n            style={{zIndex:1302}}\r\n            keepMounted>\r\n              <MenuItem classes={{root:classes.menu}}>\r\n                <TextField \r\n                value={props.filterPrice}\r\n                onChange={handleTotalFilter}\r\n                placeholder='Enter a price to filter'\r\n                InputProps={{\r\n                  type:'number',\r\n                  endAdornment:\r\n                <InputAdornment position='end' style={{cursor:'pointer'}} \r\n                  onClick={()=>{\r\n                    props.setTotalFilter(props.totalFilter==='>'?'<':props.totalFilter==='<'?'=':'>');\r\n                      filterChange(props.totalFilter==='>'?'<':props.totalFilter==='<'?'=':'>');\r\n                    }\r\n                  }>\r\n                  <span className={classes.totalFilter}>{props.totalFilter}</span>\r\n                </InputAdornment>,\r\n                startAdornment:<InputAdornment position='start'><span className={classes.dollarSign}>$</span></InputAdornment>\r\n              }}/>\r\n              </MenuItem>\r\n          </Menu>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  chip:{\r\n    marginRight:'2em',\r\n    backgroundColor:theme.palette.common.blue,\r\n    color:'#fff '\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [filterPrice,setFilterPrice]=useState('');\r\n  const [totalFilter,setTotalFilter]=useState('>');\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = props.rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    props.setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    props.setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const switchFilters=()=>{\r\n    const {websiteChecked,iOSChecked,androidChecked,softwareChecked}=props;\r\n    const websites=props.rows.filter(row=>websiteChecked?row.service==='website':null)\r\n    const iOSApps=props.rows.filter(row=>iOSChecked?row.platforms.includes('iOS'):null);\r\n    const androidApps=props.rows.filter(row=>androidChecked?row.platforms.includes('Android'):null);\r\n    const softwareApps=props.rows.filter(row=>softwareChecked?row.service==='Custom Software':null);\r\n    if(!websiteChecked && !iOSChecked && !androidChecked && !softwareChecked){\r\n      return props.rows;\r\n    }else{\r\n      let newRows=websites.concat(iOSApps.filter(item=>websites.indexOf(item)<0));\r\n      let newRows2=newRows.concat(androidApps.filter(item=>newRows.indexOf(item)<0));\r\n      let newRows3=newRows2.concat(softwareApps.filter(item=>newRows2.indexOf(item)<0));\r\n      return newRows3;\r\n    }\r\n  }\r\n\r\n  const priceFilters=(switchRows)=>{\r\n    if(filterPrice!==''){\r\n      const newRows=[...switchRows];\r\n      newRows.map(row=>eval(`${filterPrice} ${totalFilter==='='?'===':totalFilter} ${row.total.slice(1,row.total.length)}`)\r\n                              ?row.search===false?null:(row.search=true):(row.search=false));\r\n      return newRows\r\n    }else{\r\n      return switchRows;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper} elevation={0}>\r\n        <EnhancedTableToolbar numSelected={selected.length} \r\n            rows={props.rows}\r\n            setRows={props.setRows}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n            filterPrice={filterPrice}\r\n            setFilterPrice={setFilterPrice}\r\n            totalFilter={totalFilter}\r\n            setTotalFilter={setTotalFilter}/>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size='medium'\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(/*props.rows*/priceFilters(switchFilters()).filter(row=>row.search), getComparator(order, orderBy))\r\n                .slice(props.page * rowsPerPage, props.page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align='center' component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.date}</TableCell>\r\n                      <TableCell align=\"center\">{row.service}</TableCell>\r\n                      <TableCell align=\"center\" style={{maxWidth:'5em'}}>{row.features}</TableCell>\r\n                      <TableCell align=\"center\">{row.complexity}</TableCell>\r\n                      <TableCell align=\"center\">{row.platforms}</TableCell>\r\n                      <TableCell align=\"center\">{row.users}</TableCell>\r\n                      <TableCell align=\"center\">{row.total}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              \r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={priceFilters(switchFilters()).filter(row=>row.search).length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={props.page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <Grid container justify='flex-end'>\r\n          <Grid item>\r\n            {filterPrice!=''?<Chip  className={classes.chip}\r\n                                    onDelete={()=>{\r\n                                          setFilterPrice('');\r\n                                          const newRows=[...props.rows];\r\n                                          newRows.map(row=>row.search=true);\r\n                                          props.setRows(newRows);\r\n                                        }}\r\n                                    label={totalFilter==='>'?`Less than $${filterPrice}`:\r\n                                    totalFilter==='<'?`Greater than $${filterPrice}`:\r\n                                    `Equal to $${filterPrice}`}/>:null}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":12,"column":8,"nodeType":"49","messageId":"50","endLine":12,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":13,"column":8,"nodeType":"49","messageId":"50","endLine":13,"endColumn":17},{"ruleId":"47","severity":1,"message":"53","line":14,"column":8,"nodeType":"49","messageId":"50","endLine":14,"endColumn":17},{"ruleId":"47","severity":1,"message":"54","line":15,"column":8,"nodeType":"49","messageId":"50","endLine":15,"endColumn":22},{"ruleId":"47","severity":1,"message":"55","line":16,"column":8,"nodeType":"49","messageId":"50","endLine":16,"endColumn":16},{"ruleId":"47","severity":1,"message":"56","line":17,"column":8,"nodeType":"49","messageId":"50","endLine":17,"endColumn":17},{"ruleId":"47","severity":1,"message":"57","line":18,"column":8,"nodeType":"49","messageId":"50","endLine":18,"endColumn":13},{"ruleId":"47","severity":1,"message":"58","line":19,"column":8,"nodeType":"49","messageId":"50","endLine":19,"endColumn":22},{"ruleId":"47","severity":1,"message":"59","line":19,"column":8,"nodeType":"49","messageId":"50","endLine":19,"endColumn":24},{"ruleId":"47","severity":1,"message":"60","line":20,"column":8,"nodeType":"49","messageId":"50","endLine":20,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":204,"column":24,"nodeType":"63","messageId":"64","endLine":204,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":217,"column":24,"nodeType":"63","messageId":"64","endLine":217,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":408,"column":24,"nodeType":"63","messageId":"64","endLine":408,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":495,"column":25,"nodeType":"67","messageId":"64","endLine":495,"endColumn":27},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'TableContainer' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'FilterListIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-global-assign","no-unsafe-negation"]